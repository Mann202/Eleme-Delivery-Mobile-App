// Generated by view binder compiler. Do not edit!
package com.example.fududelivery.Customer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fududelivery.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangeAddressBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button add1;

  @NonNull
  public final TextView addresses;

  @NonNull
  public final RecyclerView recyclerViewAddress;

  @NonNull
  public final NestedScrollView recyclerViewAddressContainer;

  @NonNull
  public final Toolbar toolbar;

  private ActivityChangeAddressBinding(@NonNull RelativeLayout rootView, @NonNull Button add1,
      @NonNull TextView addresses, @NonNull RecyclerView recyclerViewAddress,
      @NonNull NestedScrollView recyclerViewAddressContainer, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.add1 = add1;
    this.addresses = addresses;
    this.recyclerViewAddress = recyclerViewAddress;
    this.recyclerViewAddressContainer = recyclerViewAddressContainer;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangeAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangeAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_customer_myaddress, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangeAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_button;
      Button add1 = ViewBindings.findChildViewById(rootView, id);
      if (add1 == null) {
        break missingId;
      }

      id = R.id.AddressList;
      TextView addresses = ViewBindings.findChildViewById(rootView, id);
      if (addresses == null) {
        break missingId;
      }

      id = R.id.recycler_view_address;
      RecyclerView recyclerViewAddress = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAddress == null) {
        break missingId;
      }

      id = R.id.recycler_view_address_container;
      NestedScrollView recyclerViewAddressContainer = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAddressContainer == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityChangeAddressBinding((RelativeLayout) rootView, add1, addresses,
          recyclerViewAddress, recyclerViewAddressContainer, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
